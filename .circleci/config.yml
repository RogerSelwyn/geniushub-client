# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # TEST_RESULTS=/tmp/test-results; mkdir -p ${TEST_RESULTS}
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io

      - run: mkdir -p $TEST_RESULTS

      - run:
          name: cURL v1/Zones/Summary
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            curl -X GET https://my.geniushub.co.uk/v1/zones/summary -H "authorization: Bearer ${HUB_TOKEN}" | \
              python -c "import sys, json; print(json.load(sys.stdin))" | tee ${TEST_RESULTS}/zones_curl.json

      - run:
          name: ghclient v1/Zones/Summary
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_TOKEN} zones | tee ${TEST_RESULTS}/zones_v1.json

      - run:
          name: Diff Zones/Summary v1 Vs cURL
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                       | tee -a ${TEST_RESULTS}/test-results.txt

      - run:
          name: ghclient v3/Zones/Summary
          no_output_timeout: 120
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_ADDRESS} -u ${USERNAME} -p ${PASSWORD} zones | tee ${TEST_RESULTS}/zones_v3.json

      - run:
          name: Diff Zones/Summary v1 Vs v3
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                     | tee -a ${TEST_RESULTS}/test-results.txt

      - run:
          name: cURL v1/Devices
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            curl -X GET https://my.geniushub.co.uk/v1/devices -H "authorization: Bearer ${HUB_TOKEN}" | \
              python -c "import sys, json; print(json.load(sys.stdin))" | tee ${TEST_RESULTS}/devices_curl.json

      - run:
          name: ghclient v1/Devices
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_TOKEN} devices -v | tee ${TEST_RESULTS}/devices_v1.json

      - run:
          name: Diff Devices v1 Vs cURL
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/devices_v1.json ${TEST_RESULTS}/devices_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/devices_v1.json ${TEST_RESULTS}/devices_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                           | tee -a ${TEST_RESULTS}/test-results.txt

      - run:
          name: ghclient v3/Devices
          no_output_timeout: 120
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_ADDRESS} -u ${USERNAME} -p ${PASSWORD} devices -v | sed -e s/\"/\'/g | tee ${TEST_RESULTS}/devices_v3.json

      - run:
          name: Diff Devices v1 Vs v3
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/devices_v1.json ${TEST_RESULTS}/devices_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/devices_v1.json ${TEST_RESULTS}/devices_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                         | tee -a ${TEST_RESULTS}/test-results.txt

      - run:
          name: ghclient v3/Devices/Raw
          no_output_timeout: 120
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_ADDRESS} -u ${USERNAME} -p ${PASSWORD} devices -v | tee ${TEST_RESULTS}/devices_v3_raw.json

      - run:
          name: cURL v1/Zones
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            curl -X GET https://my.geniushub.co.uk/v1/zones -H "authorization: Bearer ${HUB_TOKEN}" | \
              python -c "import sys, json; print(json.load(sys.stdin))" | tee ${TEST_RESULTS}/zones_curl.json

      - run:
          name: ghclient v1/Zones
          no_output_timeout: 300
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_TOKEN} zones -v | tee ${TEST_RESULTS}/zones_v1.json

      - run:
          name: Diff Zones v1 Vs cURL
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_curl.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                       | tee -a ${TEST_RESULTS}/test-results.txt

      - run:
          name: ghclient v3/Zones
          no_output_timeout: 120
          command: |
            . venv/bin/activate
            python ghclient.py ${HUB_ADDRESS} -u ${USERNAME} -p ${PASSWORD} zones -v | tee ${TEST_RESULTS}/zones_v3.json

      - run:
          name: Diff Zones v1 Vs v3
          no_output_timeout: 30
          command: |
            echo diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
                 diff -s ${TEST_RESULTS}/zones_v1.json ${TEST_RESULTS}/zones_v3.json | tee -a ${TEST_RESULTS}/test-results.txt
            echo                                                                     | tee -a ${TEST_RESULTS}/test-results.txt

      - store_artifacts:
          path: /tmp/test-results
          destination: devices_summary
